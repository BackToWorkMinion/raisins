@model IEnumerable<Raisins.Client.Web.Models.Payment>

@{
    ViewBag.Title = "Index";
}

<ul id="payment-menu">
    @if(ViewBag.CanEdit)
    {
    <li>@Html.ActionLink("Create New", "Create")</li>
    }
    @if(ViewBag.CanLock)
    {
    <li>@Html.ActionLink("Lock all", "LockAll")</li>
    <li>@Html.ActionLink("Lock Local", "LockLocal")</li>
    <li>@Html.ActionLink("Lock International", "LockForeign")</li>
    }
</ul>
<table id="payment-grid">
    <thead>
        <tr>
            <th class="controls"></th>
            <th class="beneficiary">@Html.ActionLink("Band Voted", "Index", new { SortBy="Beneficiary" })</th>
            <th class="class">@Html.ActionLink("Class", "Index", new { SortBy="Class" })</th>
            <th class="name">@Html.ActionLink("Name", "Index", new { SortBy="Name" })</th>
            <th class="currency">@Html.ActionLink("Currency", "Index", new { SortBy="Currency" })</th>
            <th class="amount">Actual Amount</th>
            <th class="votes">Votes</th>
            <th class="total">Converted Amount</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var payment in Model)
        { 
            <tr>
                <td class="controls">
                    <ul>
                        @if(!payment.Locked)
                        {
                            if(ViewBag.CanEdit)
                            {
                                <li>@Html.ActionLink("Edit", "Edit", new { ID = payment.ID }) </li>
                                <li>@Html.ActionLink("Delete", "Delete", new { ID = payment.ID })</li>
                            }
                        }
                        else
                        {
                            <li>@Html.ActionLink("Email", "Email", new { ID = payment.ID })</li>
                        }
                    </ul>
                </td>
                <td class="beneficiary">@Html.DisplayFor(model => payment.Beneficiary.Name)</td>
                <td class="class">@((PaymentClass)payment.ClassID)</td>
                <td class="name">@Html.DisplayFor(model => payment.Name)</td>
                <td class="currency">@Html.DisplayFor(model => payment.Currency.CurrencyCode)</td>
                <td class="amount">@Html.DisplayFor(model => payment.Amount)</td>
                <td class="votes">@(Math.Floor(payment.Amount / payment.Currency.Ratio))</td>
                <td class="total">@((payment.Amount * payment.Currency.ExchangeRate).ToString("0.00"))
                </td>
            </tr>
        }
    </tbody>
</table>
